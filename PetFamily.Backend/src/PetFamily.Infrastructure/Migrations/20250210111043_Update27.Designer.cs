// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetFamily.Infrastructure;

#nullable disable

namespace PetFamily.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContex))]
    [Migration("20250210111043_Update27")]
    partial class Update27
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetFamily.Domain.PetContext.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_creation");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("status");

                    b.Property<Guid?>("pets_id")
                        .HasColumnType("uuid")
                        .HasColumnName("pets_id");

                    b.ComplexProperty<Dictionary<string, object>>("BreedId", "PetFamily.Domain.PetContext.Pet.BreedId#BreedId", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("breed_id");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Color", "PetFamily.Domain.PetContext.Pet.Color#NotEmptyString", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)")
                                .HasColumnName("color");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "PetFamily.Domain.PetContext.Pet.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("IsNeutered", "PetFamily.Domain.PetContext.Pet.IsNeutered#NeuteredStatus", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<bool>("Value")
                                .HasColumnType("boolean")
                                .HasColumnName("is_neutered");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("IsVaccinated", "PetFamily.Domain.PetContext.Pet.IsVaccinated#RabiesVaccinationStatus", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<bool>("Value")
                                .HasColumnType("boolean")
                                .HasColumnName("is_vaccinated");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "PetFamily.Domain.PetContext.Pet.Name#NotEmptyString", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)")
                                .HasColumnName("name");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("OwnerPhoneNumber", "PetFamily.Domain.PetContext.Pet.OwnerPhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("owner_phone_number");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PetAddress", "PetFamily.Domain.PetContext.Pet.PetAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Apartment")
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)")
                                .HasColumnName("apartment");

                            b1.ComplexProperty<Dictionary<string, object>>("Building", "PetFamily.Domain.PetContext.Pet.PetAddress#Address.Building#NotEmptyString", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("building");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("City", "PetFamily.Domain.PetContext.Pet.PetAddress#Address.City#NotEmptyString", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("city");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("Region", "PetFamily.Domain.PetContext.Pet.PetAddress#Address.Region#NotEmptyString", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("region");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("Street", "PetFamily.Domain.PetContext.Pet.PetAddress#Address.Street#NotEmptyString", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("street");
                                });
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PetHealthInformation", "PetFamily.Domain.PetContext.Pet.PetHealthInformation#PetHealthInformation", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)")
                                .HasColumnName("pet_health_information");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Size", "PetFamily.Domain.PetContext.Pet.Size#Size", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Height")
                                .HasColumnType("integer")
                                .HasColumnName("height");

                            b1.Property<int>("Weight")
                                .HasColumnType("integer")
                                .HasColumnName("weight");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("SpeciesId", "PetFamily.Domain.PetContext.Pet.SpeciesId#SpeciesId", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("species_id");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Title", "PetFamily.Domain.PetContext.Pet.Title#Title", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(70)
                                .HasColumnType("character varying(70)")
                                .HasColumnName("title");
                        });

                    b.HasKey("Id")
                        .HasName("pk_pets");

                    b.HasIndex("pets_id")
                        .HasDatabaseName("ix_pets_pets_id");

                    b.ToTable("Pets", (string)null);
                });

            modelBuilder.Entity("PetFamily.Domain.SpeciesContext.SpeciesEntities.Breed", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("species_id")
                        .HasColumnType("uuid")
                        .HasColumnName("species_id");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "PetFamily.Domain.SpeciesContext.SpeciesEntities.Breed.Name#NotEmptyString", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)")
                                .HasColumnName("name");
                        });

                    b.HasKey("Id")
                        .HasName("pk_breeds");

                    b.HasIndex("species_id")
                        .HasDatabaseName("ix_breeds_species_id");

                    b.ToTable("Breeds", (string)null);
                });

            modelBuilder.Entity("PetFamily.Domain.SpeciesContext.SpeciesEntities.Species", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "PetFamily.Domain.SpeciesContext.SpeciesEntities.Species.Name#NotEmptyString", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)")
                                .HasColumnName("name");
                        });

                    b.HasKey("Id")
                        .HasName("pk_species");

                    b.ToTable("Species", (string)null);
                });

            modelBuilder.Entity("PetFamily.Domain.VolunteerContext.Volunteer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("PetsRehomed")
                        .HasColumnType("integer")
                        .HasColumnName("pets_rehomed");

                    b.Property<int>("PetsSeekingHome")
                        .HasColumnType("integer")
                        .HasColumnName("pets_seeking_home");

                    b.Property<int>("PetsUnderTreatment")
                        .HasColumnType("integer")
                        .HasColumnName("pets_under_treatment");

                    b.ComplexProperty<Dictionary<string, object>>("AssistanceRequisites", "PetFamily.Domain.VolunteerContext.Volunteer.AssistanceRequisites#AssistanceRequisites", b1 =>
                        {
                            b1.IsRequired();

                            b1.ComplexProperty<Dictionary<string, object>>("Description", "PetFamily.Domain.VolunteerContext.Volunteer.AssistanceRequisites#AssistanceRequisites.Description#Description", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .ValueGeneratedOnUpdateSometimes()
                                        .HasMaxLength(500)
                                        .HasColumnType("character varying(500)")
                                        .HasColumnName("description");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("Title", "PetFamily.Domain.VolunteerContext.Volunteer.AssistanceRequisites#AssistanceRequisites.Title#Title", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(70)
                                        .HasColumnType("character varying(70)")
                                        .HasColumnName("title");
                                });
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Description", "PetFamily.Domain.VolunteerContext.Volunteer.Description#Description", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)")
                                .HasColumnName("description");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Email", "PetFamily.Domain.VolunteerContext.Volunteer.Email#Email", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("email");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("FullName", "PetFamily.Domain.VolunteerContext.Volunteer.FullName#FullName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("MiddleName")
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)")
                                .HasColumnName("middle_name");

                            b1.ComplexProperty<Dictionary<string, object>>("FirstName", "PetFamily.Domain.VolunteerContext.Volunteer.FullName#FullName.FirstName#NotEmptyString", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("first_name");
                                });

                            b1.ComplexProperty<Dictionary<string, object>>("LastName", "PetFamily.Domain.VolunteerContext.Volunteer.FullName#FullName.LastName#NotEmptyString", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("last_name");
                                });
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "PetFamily.Domain.VolunteerContext.Volunteer.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("phone_number");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("YearsOfExperience", "PetFamily.Domain.VolunteerContext.Volunteer.YearsOfExperience#YearsOfExperience", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("years_of_experience");
                        });

                    b.HasKey("Id")
                        .HasName("pk_volunteers");

                    b.ToTable("Volunteers", (string)null);
                });

            modelBuilder.Entity("PetFamily.Domain.PetContext.Pet", b =>
                {
                    b.HasOne("PetFamily.Domain.VolunteerContext.Volunteer", null)
                        .WithMany("Pets")
                        .HasForeignKey("pets_id")
                        .HasConstraintName("fk_pets_volunteers_pets_id");

                    b.OwnsOne("PetFamily.Domain.PetContext.PetVO.TransferRequisitesForHelpsList", "TransferRequisitesForHelpsList", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.HasKey("PetId");

                            b1.ToTable("Pets");

                            b1.ToJson("TransferRequisitesForHelpsList");

                            b1.WithOwner()
                                .HasForeignKey("PetId")
                                .HasConstraintName("fk_pets_pets_id");

                            b1.OwnsMany("PetFamily.Domain.PetContext.PetVO.RequisitesForHelp", "RequisitesForHelps", b2 =>
                                {
                                    b2.Property<Guid>("TransferRequisitesForHelpsListPetId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("__synthesizedOrdinal")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.HasKey("TransferRequisitesForHelpsListPetId", "__synthesizedOrdinal")
                                        .HasName("pk_pets");

                                    b2.ToTable("Pets");

                                    b2.WithOwner()
                                        .HasForeignKey("TransferRequisitesForHelpsListPetId")
                                        .HasConstraintName("fk_pets_pets_transfer_requisites_for_helps_list_pet_id");

                                    b2.OwnsOne("PetFamily.Domain.SharedVO.Description", "Description", b3 =>
                                        {
                                            b3.Property<Guid>("RequisitesForHelpTransferRequisitesForHelpsListPetId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("RequisitesForHelp__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .ValueGeneratedOnUpdateSometimes()
                                                .HasMaxLength(500)
                                                .HasColumnType("character varying(500)")
                                                .HasColumnName("description");

                                            b3.HasKey("RequisitesForHelpTransferRequisitesForHelpsListPetId", "RequisitesForHelp__synthesizedOrdinal")
                                                .HasName("pk_pets");

                                            b3.ToTable("Pets");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisitesForHelpTransferRequisitesForHelpsListPetId", "RequisitesForHelp__synthesizedOrdinal")
                                                .HasConstraintName("fk_pets_pets_requisites_for_help_transfer_requisites_for_helps_list_pe");
                                        });

                                    b2.OwnsOne("PetFamily.Domain.SharedVO.Title", "Title", b3 =>
                                        {
                                            b3.Property<Guid>("RequisitesForHelpTransferRequisitesForHelpsListPetId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("RequisitesForHelp__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .ValueGeneratedOnUpdateSometimes()
                                                .HasMaxLength(70)
                                                .HasColumnType("character varying(70)")
                                                .HasColumnName("title");

                                            b3.HasKey("RequisitesForHelpTransferRequisitesForHelpsListPetId", "RequisitesForHelp__synthesizedOrdinal")
                                                .HasName("pk_pets");

                                            b3.ToTable("Pets");

                                            b3.WithOwner()
                                                .HasForeignKey("RequisitesForHelpTransferRequisitesForHelpsListPetId", "RequisitesForHelp__synthesizedOrdinal")
                                                .HasConstraintName("fk_pets_pets_requisites_for_help_transfer_requisites_for_helps_list_pe");
                                        });

                                    b2.Navigation("Description")
                                        .IsRequired();

                                    b2.Navigation("Title")
                                        .IsRequired();
                                });

                            b1.Navigation("RequisitesForHelps");
                        });

                    b.Navigation("TransferRequisitesForHelpsList")
                        .IsRequired();
                });

            modelBuilder.Entity("PetFamily.Domain.SpeciesContext.SpeciesEntities.Breed", b =>
                {
                    b.HasOne("PetFamily.Domain.SpeciesContext.SpeciesEntities.Species", null)
                        .WithMany("Breeds")
                        .HasForeignKey("species_id")
                        .HasConstraintName("fk_breeds_species_species_id");
                });

            modelBuilder.Entity("PetFamily.Domain.VolunteerContext.Volunteer", b =>
                {
                    b.OwnsOne("PetFamily.Domain.VolunteerContext.VolunteerVO.TransferSocialNetworkList", "TransferSocialNetworkList", b1 =>
                        {
                            b1.Property<Guid>("VolunteerId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.HasKey("VolunteerId");

                            b1.ToTable("Volunteers");

                            b1.ToJson("TransferSocialNetworkList");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerId")
                                .HasConstraintName("fk_volunteers_volunteers_id");

                            b1.OwnsMany("PetFamily.Domain.VolunteerContext.VolunteerVO.SocialNetwork", "SocialNetworks", b2 =>
                                {
                                    b2.Property<Guid>("TransferSocialNetworkListVolunteerId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("__synthesizedOrdinal")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.HasKey("TransferSocialNetworkListVolunteerId", "__synthesizedOrdinal")
                                        .HasName("pk_volunteers");

                                    b2.ToTable("Volunteers");

                                    b2.WithOwner()
                                        .HasForeignKey("TransferSocialNetworkListVolunteerId")
                                        .HasConstraintName("fk_volunteers_volunteers_transfer_social_network_list_volunteer_id");

                                    b2.OwnsOne("PetFamily.Domain.SharedVO.NotEmptyString", "NetworkName", b3 =>
                                        {
                                            b3.Property<Guid>("SocialNetworkTransferSocialNetworkListVolunteerId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("SocialNetwork__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(30)
                                                .HasColumnType("character varying(30)")
                                                .HasColumnName("network_name");

                                            b3.HasKey("SocialNetworkTransferSocialNetworkListVolunteerId", "SocialNetwork__synthesizedOrdinal")
                                                .HasName("pk_volunteers");

                                            b3.ToTable("Volunteers");

                                            b3.WithOwner()
                                                .HasForeignKey("SocialNetworkTransferSocialNetworkListVolunteerId", "SocialNetwork__synthesizedOrdinal")
                                                .HasConstraintName("fk_volunteers_volunteers_social_network_transfer_social_network_lis");
                                        });

                                    b2.OwnsOne("PetFamily.Domain.SharedVO.Description", "NetworkAddress", b3 =>
                                        {
                                            b3.Property<Guid>("SocialNetworkTransferSocialNetworkListVolunteerId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("SocialNetwork__synthesizedOrdinal")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasMaxLength(500)
                                                .HasColumnType("character varying(500)")
                                                .HasColumnName("network_address");

                                            b3.HasKey("SocialNetworkTransferSocialNetworkListVolunteerId", "SocialNetwork__synthesizedOrdinal")
                                                .HasName("pk_volunteers");

                                            b3.ToTable("Volunteers");

                                            b3.WithOwner()
                                                .HasForeignKey("SocialNetworkTransferSocialNetworkListVolunteerId", "SocialNetwork__synthesizedOrdinal")
                                                .HasConstraintName("fk_volunteers_volunteers_social_network_transfer_social_network_lis");
                                        });

                                    b2.Navigation("NetworkAddress")
                                        .IsRequired();

                                    b2.Navigation("NetworkName")
                                        .IsRequired();
                                });

                            b1.Navigation("SocialNetworks");
                        });

                    b.Navigation("TransferSocialNetworkList")
                        .IsRequired();
                });

            modelBuilder.Entity("PetFamily.Domain.SpeciesContext.SpeciesEntities.Species", b =>
                {
                    b.Navigation("Breeds");
                });

            modelBuilder.Entity("PetFamily.Domain.VolunteerContext.Volunteer", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
